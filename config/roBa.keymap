#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 80

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <2>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

&mkp_input_listener { input-processors = <&zip_temp_layer 2 250>; };

/ {
    combos { compatible = "zmk,combos"; };

    behaviors {
        encoder_msc_up_down: encoder_msc_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ENCODER_MSC_UP_DOWN";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };

        encoder_msc_down_up: encoder_msc_down_up {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ENCODER_MSC_DOWN_UP";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
        };
    };

    macros {
        mac_setup: osx_setup {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 0 &tog 0>;
            label = "OSX_SETUP";
        };

        win_setup: win_setup {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 1 &tog 0>;
            label = "WIN_SETUP";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer_mac {
            bindings = <
&kp Q               &kp W             &kp E         &kp R                    &kp T                                          &kp Y  &kp U  &kp I      &kp O    &kp P
&mt LEFT_COMMAND A  &kp S             &kp D         &kp F                    &kp G        &mkp MCLK      &kp SINGLE_QUOTE   &kp H  &kp J  &kp K      &kp L    &kp SEMICOLON
&mt LEFT_SHIFT Z    &kp X             &kp C         &kp V                    &lt 5 B      &mkp MB4       &sl 3              &kp N  &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp LEFT_COMMAND    &kp LEFT_CONTROL  &kp LEFT_ALT  &mt LEFT_GUI LANGUAGE_2  &lt 3 SPACE  &kp TAB        &kp RIGHT_COMMAND  &sl 1                             &kp LS(LEFT_SHIFT)
            >;

            sensor-bindings = <&encoder_msc_up_down>;
        };

        cursor {
            bindings = <
&kp ESCAPE      &trans              &trans            &trans         &trans                                      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UP_ARROW   &kp RIGHT_BRACKET  &kp BACKSPACE
&kp TAB         &trans              &kp LC(UP_ARROW)  &trans         &trans  &trans            &kp LEFT_BRACE    &kp RIGHT_BRACE       &kp LEFT               &kp DOWN       &kp RIGHT          &kp ENTER
&trans          &kp LC(LEFT_ARROW)  &kp LC(DOWN)      &kp LC(RIGHT)  &trans  &kp CAPSLOCK      &kp LEFT_BRACKET  &kp MINUS             &kp EQUAL              &kp RS(MINUS)  &kp RS(PLUS)       &kp RIGHT_SHIFT
&kp LEFT_SHIFT  &trans              &trans            &trans         &mo 6   &trans            &trans            &trans                                                                         &trans
            >;

            sensor-bindings = <&encoder_msc_up_down>;
        };

        Mouse {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans    &trans     &trans     &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &kp HOME  &mkp LCLK  &mkp RCLK  &kp END  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans    &trans     &trans     &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                   &trans
            >;
        };

        number {
            bindings = <
&kp NUMBER_1   &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4    &kp N5                                &kp NUMBER_6       &kp NUMBER_7        &kp NUMBER_8        &kp NUMBER_9         &kp NUMBER_0
&kp GRAVE      &kp NUMBER_4  &kp N5        &kp NUMBER_6    &kp LEFT_BRACKET  &none       &trans  &kp RIGHT_BRACKET  &mkp LCLK           &mkp RCLK           &none                &trans
&kp BACKSLASH  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3    &kp LEFT_BRACE    &tog 0      &trans  &kp RIGHT_BRACE    &kp LS(LEFT_ARROW)  &kp LS(DOWN_ARROW)  &kp LS(RIGHT_ARROW)  &trans
&trans         &kp N0        &trans        &kp LANGUAGE_1  &trans            &trans      &trans  &trans                                                                          &trans
            >;
        };

        bluetooth {
            bindings = <
&trans  &trans  &trans  &trans  &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans      &trans       &mac_setup    &win_setup    &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&kp GRAVE  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR                      &kp PERCENT  &kp LCTRL  &kp AMPERSAND  &kp ASTERISK  &trans
&trans     &trans           &trans       &trans    &trans      &trans      &trans  &trans       &trans     &trans         &trans        &trans
&trans     &trans           &trans       &trans    &trans      &trans      &trans  &trans       &trans     &trans         &trans        &trans
&trans     &trans           &trans       &trans    &trans      &trans      &trans  &trans                                               &trans
            >;
        };
    };
};
